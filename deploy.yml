---
  - name: Deploy Dockerized Website on EC2
    hosts: web
    become: true
    vars:
      docker_user: "{{ lookup('env', 'DOCKER_USER') }}"
      docker_pass: "{{ lookup('env', 'DOCKER_PASS') }}"
      image_name: "websiteimage:latest"
  
    tasks:
      - name: Install required packages
        apt:
          name: 
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
          state: present
          update_cache: yes
  
      - name: Add Docker GPG key
        shell: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
        register: add_gpg_key
        changed_when: "'OK' in add_gpg_key.stdout"
  
      - name: Add Docker repository
        shell: |
          add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        register: add_repo
        changed_when: "'added' in add_repo.stdout or 'already exists' in add_repo.stdout"
  
      - name: Update package list
        apt:
          update_cache: yes
  
      - name: Install Docker
        apt:
          name: docker-ce
          state: present
  
      - name: Start Docker service
        service:
          name: docker
          state: started
          enabled: true
  
      - name: Log in to Docker Hub
        docker_login:
          username: "{{ docker_user }}"
          password: "{{ docker_pass }}"
  
      - name: Pull Docker image
        docker_image:
          name: "{{ docker_user }}/{{ image_name }}"
          state: present
          pull: yes
  
      - name: Stop and remove existing container
        docker_container:
          name: website
          state: absent
  
      - name: Run the Docker container
        docker_container:
          name: website
          image: "{{ docker_user }}/{{ image_name }}"
          state: started
          ports:
            - "80:80"
          restart_policy: always
  